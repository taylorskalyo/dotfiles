# Colored man pages
cman() {
    env \
    LESS_TERMCAP_mb=$'\E[01;31m' \
    LESS_TERMCAP_md=$'\E[01;38;5;74m' \
    LESS_TERMCAP_me=$'\E[0m' \
    LESS_TERMCAP_se=$'\E[0m' \
    LESS_TERMCAP_so=$'\E[38;5;246m' \
    LESS_TERMCAP_ue=$'\E[0m' \
    LESS_TERMCAP_us=$'\E[04;38;5;146m' \
    man "$@"
}
alias man='cman'

# Log in to CG database via mysql
cgmysql() {
  env=$RAILS_ENV
  [ ! -z $env ] || env="development"
  config="$CGDIR/config/database.yml"
  read host user pass database <<<$(ruby -ryaml -e "puts YAML::load_file('$config')['$env'].values_at('host', 'username', 'password', 'database').join(' ')")

  if [ ! -z $REMOTE_HOST ]; then
    # Tunnel through remote host
    ssh -M -S mysql-sock -f -L 50000:$host:3306 util -N
    mysql -h127.0.0.1 -u$user -p$pass -P50000 $database "$@"
    ssh -S mysql-sock -O exit "$REMOTE_HOST"
  else
    # Open direct connection
    mysql -h$host -u$user -p$pass $database "$@"
  fi
}

# Log in to CG database via innotop
cginnotop() {
  env=$RAILS_ENV
  [ ! -z $env ] || env="development"
  config="$CGDIR/config/database.yml"
  read host user pass <<<$(ruby -ryaml -e "puts YAML::load_file('$config')['$env'].values_at('host', 'username', 'password').join(' ')")

  if [ ! -z $REMOTE_HOST ]; then
    # Tunnel through remote host
    ssh -M -S innotop-sock -f -L 50001:$host:3306 util -N
    innotop -h127.0.0.1 -u$user -p$pass -P50001 "$@"
    ssh -S innotop-sock -O exit "$REMOTE_HOST"
  else
    # Open direct connection
    innotop -h$host -u$user -p$pass "$@"
  fi
}

# Open a screen session with the specified name on the specified server
# Prepend user to avoid naming conflicts with other users
# Change escape key to 'j' to avoid conflicts with local multiplexor
ses() {
  ssh $1 -t "screen -e^Jj -DR $USER-$2"
}
